#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã
"""
import subprocess
import time
import requests
import os

def check_processes():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"""
    try:
        result = subprocess.run(["pgrep", "-f", "python.*app.py"], 
                              capture_output=True, text=True, timeout=5)
        if result.stdout.strip():
            pids = result.stdout.strip().split('\n')
            print(f"üîç –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã app.py: {pids}")
            return pids
        else:
            print("‚úÖ –ù–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ app.py")
            return []
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}")
        return []

def check_app_response():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        response = requests.get("http://localhost:60183/", timeout=3)
        print(f"üåê HTTP –æ—Ç–≤–µ—Ç: {response.status_code}")
        return response.status_code in [200, 401]
    except Exception as e:
        print(f"‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç: {e}")
        return False

def check_pid_file():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ PID —Ñ–∞–π–ª–∞"""
    try:
        if os.path.exists("src/app.pid"):
            with open("src/app.pid", "r") as f:
                pid = f.read().strip()
            print(f"üìã PID —Ñ–∞–π–ª: {pid}")
            return pid
        else:
            print("‚ÑπÔ∏è PID —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è PID: {e}")
        return None

def main():
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –°–ò–°–¢–ï–ú–´")
    print("=" * 40)
    print(f"‚è∞ –í—Ä–µ–º—è: {time.strftime('%H:%M:%S')}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
    processes = check_processes()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PID —Ñ–∞–π–ª
    pid_file = check_pid_file()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app_responding = check_app_response()
    
    print()
    print("üìä –°–¢–ê–¢–£–°:")
    print(f"   –ü—Ä–æ—Ü–µ—Å—Å—ã: {len(processes)} –∑–∞–ø—É—â–µ–Ω–æ")
    print(f"   PID —Ñ–∞–π–ª: {'–ï—Å—Ç—å' if pid_file else '–ù–µ—Ç'}")
    print(f"   HTTP –æ—Ç–≤–µ—Ç: {'‚úÖ –î–∞' if app_responding else '‚ùå –ù–µ—Ç'}")
    
    if app_responding:
        print("‚úÖ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ")
    elif processes:
        print("‚ö†Ô∏è –ü–†–û–¶–ï–°–°–´ –ï–°–¢–¨, –ù–û –ü–†–ò–õ–û–ñ–ï–ù–ò–ï –ù–ï –û–¢–í–ï–ß–ê–ï–¢")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: pkill -f 'python.*app.py' && python src/app.py &")
    else:
        print("‚ùå –°–ò–°–¢–ï–ú–ê –ù–ï –ó–ê–ü–£–©–ï–ù–ê")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python src/app.py &")

if __name__ == "__main__":
    main()

