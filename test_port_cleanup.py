#!/usr/bin/env python3
"""
Test script for port cleanup functionality
"""

import socket
import subprocess
import time
import os

def is_port_in_use(port):
    """Check if port is in use"""
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            result = s.connect_ex(('127.0.0.1', port))
            return result == 0
    except Exception:
        return False

def start_dummy_server(port):
    """Start a dummy server on port to simulate existing process"""
    try:
        process = subprocess.Popen([
            'python3', '-c', f'''
import socket
import time
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind(("127.0.0.1", {port}))
s.listen(1)
print(f"Dummy server listening on port {port}, PID: {{os.getpid()}}")
try:
    while True:
        time.sleep(1)
except KeyboardInterrupt:
    print("Shutting down dummy server")
finally:
    s.close()
'''
        ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        
        # Wait a bit for server to start
        time.sleep(2)
        return process
    except Exception as e:
        print(f"Failed to start dummy server: {e}")
        return None

def main():
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –û–ß–ò–°–¢–ö–ò –ü–û–†–¢–û–í")
    print("=" * 50)
    
    # Test 1: Check initial port status
    print("\n1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Ä—Ç–∞ 5000:")
    if is_port_in_use(5000):
        print("‚ö†Ô∏è –ü–æ—Ä—Ç 5000 —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è")
    else:
        print("‚úÖ –ü–æ—Ä—Ç 5000 —Å–≤–æ–±–æ–¥–µ–Ω")
    
    # Test 2: Start dummy server
    print("\n2. –ó–∞–ø—É—Å–∫–∞–µ–º dummy server –Ω–∞ –ø–æ—Ä—Ç—É 5000:")
    dummy_process = start_dummy_server(5000)
    
    if dummy_process:
        print(f"‚úÖ Dummy server –∑–∞–ø—É—â–µ–Ω, PID: {dummy_process.pid}")
        
        # Verify port is now in use
        if is_port_in_use(5000):
            print("‚úÖ –ü–æ—Ä—Ç 5000 —Ç–µ–ø–µ—Ä—å –∑–∞–Ω—è—Ç (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)")
        else:
            print("‚ùå –ü–æ—Ä—Ç 5000 –≤—Å–µ –µ—â–µ —Å–≤–æ–±–æ–¥–µ–Ω (–æ—à–∏–±–∫–∞)")
        
        # Test 3: Test daemon start with cleanup
        print("\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ daemon —Å –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–æ–π –ø–æ—Ä—Ç–∞:")
        print("–ó–∞–ø—É—Å–∫–∞–µ–º: python3 start.py --daemon")
        print("Daemon –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å dummy server –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –Ω–∞ –ø–æ—Ä—Ç—É 5000")
        
        # Clean up dummy server
        print("\nüßπ –£–±–∏—Ä–∞–µ–º dummy server –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞:")
        dummy_process.terminate()
        dummy_process.wait()
        print("‚úÖ Dummy server –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å dummy server")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å:")
    print("   python3 start.py --daemon")
    print("–ü—Ä–æ–µ–∫—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –Ω–∞ –ø–æ—Ä—Ç—É 5000 –±–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤!")

if __name__ == "__main__":
    main()
